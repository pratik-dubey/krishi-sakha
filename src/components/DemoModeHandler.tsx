import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Separator } from "@/components/ui/separator";
import { 
  Play, 
  BookOpen,
  Lightbulb,
  Globe,
  Wifi,
  Shield,
  Target,
  Sparkles,
  MessageCircle,
  Volume2,
  Eye,
  Star,
  MapPin,
  TrendingUp
} from "lucide-react";

interface DemoModeHandlerProps {
  onRunExample: (query: string, language: string) => Promise<void>;
  isLoading: boolean;
  language: string;
}

export const DemoModeHandler = ({ onRunExample, isLoading, language }: DemoModeHandlerProps) => {
  const [selectedExample, setSelectedExample] = useState<string | null>(null);

  const isHindi = language === 'hi';

  const systemOverview = isHindi ? [
    "üåç ‡§¨‡§π‡•Å‡§≠‡§æ‡§∑‡•Ä ‡§∏‡§≤‡§æ‡§π - ‡§π‡§ø‡§Ç‡§¶‡•Ä, ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡•Ä ‡§î‡§∞ ‡§π‡§ø‡§Ç‡§ó‡•ç‡§≤‡§ø‡§∂ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§®",
    "ü§ñ ‡§è‡§ú‡•á‡§Ç‡§ü‡§ø‡§ï AI - ‡§≤‡§æ‡§á‡§µ ‡§°‡•á‡§ü‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡•ç‡§µ‡§ö‡§æ‡§≤‡§ø‡§§ ‡§∏‡§≤‡§æ‡§π",
    "üîç ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡•Ä ‡§∏‡•ç‡§∞‡•ã‡§§ - ‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø‡§§‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§•",
    "üì± ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§§‡•à‡§Ø‡§æ‡§∞ - ‡§ï‡§Æ ‡§ï‡§®‡•á‡§ï‡•ç‡§ü‡§ø‡§µ‡§ø‡§ü‡•Ä ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à",
    "üáÆüá≥ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡•É‡§∑‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§§‡•à‡§Ø‡§æ‡§∞"
  ] : [
    "üåç Multilingual advice - Hindi, English & Hinglish support",
    "ü§ñ Agentic AI with live data retrieval from trusted sources",
    "üîç Transparent sources with confidence scores & citations",
    "üì± Offline-ready caching for low-connectivity areas",
    "üáÆüá≥ Tailored specifically for Indian agriculture"
  ];

  const userGuide = isHindi ? {
    title: "ÔøΩÔøΩÔøΩ‡§™‡§Ø‡•ã‡§ó ‡§ó‡§æ‡§á‡§°",
    items: [
      "üí¨ **‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§™‡•Ç‡§õ‡•á‡§Ç**: ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§Ø‡§æ ‡§µ‡•â‡§á‡§∏ ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡§æ ‡§ï‡•É‡§∑‡§ø ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§™‡•Ç‡§õ‡•á‡§Ç",
      "üìä **‡§™ÔøΩÔøΩÔøΩ‡§ø‡§£‡§æ‡§Æ ‡§™‡§¢‡§º‡•á‡§Ç**: ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§î‡§∞ ‡§∏‡•ç‡§∞‡•ã‡§§ ‡§¨‡•à‡§ú ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Ç‡§∞‡§ö‡§ø‡§§ ‡§â‡§§‡•ç‡§§‡§∞",
      "‚≠ê **‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø‡§§‡§æ ‡§∏‡§Æ‡§ù‡•á‡§Ç**: ‡§â‡§ö‡•ç‡§ö/‡§Æ‡§ß‡•ç‡§Ø‡§Æ/‡§®‡§ø‡§Æ‡•ç‡§® ‡§∏‡•ç‡§ï‡•ã‡§∞ ‡§¶‡•á‡§ñ‡•á‡§Ç", 
      "üì± **‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§Æ‡•ã‡§°**: ‡§ï‡•à‡§∂‡•ç‡§° ‡§°‡•á‡§ü‡§æ ‡§∏‡•á ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§â‡§§‡•ç‡§§‡§∞ ‡§¶‡•á‡§ñ‡•á‡§Ç",
      "üíæ **‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç**: ‡§π‡§ø‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∏‡§≤‡§æ‡§π ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç"
    ]
  } : {
    title: "User Guide",
    items: [
      "üí¨ **Ask Questions**: Type or speak your farming query naturally",
      "üìä **Read Results**: Structured answers with emojis & source badges",
      "‚≠ê **Understand Confidence**: High/Medium/Low reliability scores",
      "üì± **Use Offline**: Access cached responses when connectivity is poor",
      "üíæ **Save Queries**: Important advice is automatically saved in history"
    ]
  };

  const exampleQueries = [
    {
      id: 'weather_simple',
      category: isHindi ? '‡§Æ‡•å‡§∏‡§Æ' : 'Weather',
      query: isHindi ? '‡§™‡§Ç‡§ú‡§æ‡§¨ ‡§Æ‡•á‡§Ç ‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§¨‡•Å‡§Ü‡§à ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•à‡§∏‡§æ ‡§π‡•à?' : 'How is the weather for wheat sowing in Punjab?',
      language: language,
      difficulty: 'Simple',
      icon: 'üå¶Ô∏è'
    },
    {
      id: 'market_hindi',
      category: isHindi ? '‡§¨‡§æ‡§ú‡§æ‡§∞' : 'Market',
      query: isHindi ? '‡§π‡§∞‡§ø‡§Ø‡§æ‡§£‡§æ ‡§Æ‡•á‡§Ç ‡§ß‡§æ‡§® ‡§ï‡•á ‡§¶‡§æ‡§Æ ‡§ï‡•ç‡§Ø‡§æ ‡§ö‡§≤ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç?' : 'What are the current rice prices in Haryana?',
      language: language,
      difficulty: 'Simple',
      icon: 'üí∞'
    },
    {
      id: 'advisory_complex',
      category: isHindi ? '‡§∏‡§≤‡§æ‡§π' : 'Advisory',
      query: isHindi ? '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡§™‡§æ‡§∏ ‡§ï‡•Ä ‡§´‡§∏‡§≤ ‡§ï‡•ã ‡§ï‡•Ä‡§ü‡•ã‡§Ç ‡§∏‡•á ‡§ï‡•à‡§∏‡•á ‡§¨‡§ö‡§æ‡§è‡§Ç?' : 'How to protect cotton crop from pests in Gujarat?',
      language: language,
      difficulty: 'Medium',
      icon: 'üêõ'
    },
    {
      id: 'multi_domain',
      category: isHindi ? '‡§Æ‡§≤‡•ç‡§ü‡•Ä-‡§°‡•ã‡§Æ‡•á‡§®' : 'Multi-domain',
      query: isHindi ? '‡§Æ‡§ß‡•ç‡§Ø ‡§™‡•ç‡§∞‡§¶‡•á‡§∂ ‡§Æ‡•á‡§Ç ‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡•å‡§∏‡§Æ, ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§î‡§∞ ‡§¨‡§æ‡§ú‡§æÔøΩÔøΩ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á‡§Ç' : 'Provide weather, soil and market information for soybean in Madhya Pradesh',
      language: language,
      difficulty: 'Complex',
      icon: 'üîÑ'
    },
    {
      id: 'scheme_info',
      category: isHindi ? '‡§Ø‡•ã‡§ú‡§®‡§æ' : 'Schemes',
      query: isHindi ? '‡§õ‡•ã‡§ü‡•á ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?' : 'What government schemes are available for small farmers?',
      language: language,
      difficulty: 'Medium',
      icon: 'üìú'
    }
  ];

  const runExample = async (example: any) => {
    setSelectedExample(example.id);
    try {
      await onRunExample(example.query, example.language);
    } finally {
      setSelectedExample(null);
    }
  };

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty.toLowerCase()) {
      case 'simple': return 'bg-green-100 text-green-800';
      case 'medium': return 'bg-yellow-100 text-yellow-800';
      case 'complex': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="space-y-6">
      {/* System Status Alert */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h3 className="font-medium text-blue-900 mb-2 flex items-center gap-2">
          <Sparkles className="h-4 w-4" />
          {isHindi ? 'üåæ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§ñ‡§æ AI ‡§°‡•á‡§Æ‡•ã ‡§Æ‡•ã‡§°' : 'üåæ Krishi Sakha AI Demo Mode'}
        </h3>
        <p className="text-sm text-blue-800">
          {isHindi ?
            '‡§Ø‡§π ‡§è‡§ï ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§ï‡•É‡§∑‡§ø ‡§∏‡§≤‡§æ‡§π‡§ï‡§æ‡§∞ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡§æ ‡§°‡•á‡§Æ‡•ã ‡§π‡•à‡•§ ‡§®‡•Ä‡§ö‡•á ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ì‡§µ‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§î‡§∞ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ó‡§æ‡§á‡§° ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§' :
            'This is a demo of a comprehensive agricultural advisory system. Please review the system overview and user guide below.'
          }
        </p>
      </div>

      <Tabs defaultValue="overview" className="w-full">
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="overview">üìú {isHindi ? '‡§™‡§∞‡§ø‡§ö‡§Ø' : 'Overview'}</TabsTrigger>
          <TabsTrigger value="guide">üìñ {isHindi ? '‡§ó‡§æ‡§á‡§°' : 'Guide'}</TabsTrigger>
          <TabsTrigger value="demo">üé• {isHindi ? '‡§°‡•á‡§Æ‡•ã' : 'Demo'}</TabsTrigger>
          <TabsTrigger value="notes">üîç {isHindi ? '‡§®‡•ã‡§ü‡•ç‡§∏' : 'Notes'}</TabsTrigger>
        </TabsList>

        {/* System Overview Tab */}
        <TabsContent value="overview" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Sparkles className="h-5 w-5 text-primary" />
                {isHindi ? '‡§ï‡•É‡§∑‡§ø ‡§∏‡§ñ‡§æ AI ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ' : 'Krishi Sakha AI System'}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-muted-foreground">
                {isHindi ? 
                  '‡§è‡§ï ‡§è‡§ú‡•á‡§Ç‡§ü‡§ø‡§ï AI ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ú‡•ã ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§ï‡•É‡§∑‡§ø ‡§∏‡§≤‡§æ‡§π ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§' :
                  'An agentic AI system providing comprehensive agricultural advisory to Indian farmers with real-time data integration.'
                }
              </p>
              
              <div className="space-y-3">
                <h4 className="font-medium flex items-center gap-2">
                  <Target className="h-4 w-4" />
                  {isHindi ? '‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç' : 'Key Features'}
                </h4>
                <ul className="space-y-2">
                  {systemOverview.map((feature, index) => (
                    <li key={index} className="text-sm flex items-start gap-2">
                      <span className="text-primary">‚Ä¢</span>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>

              <div className="grid grid-cols-2 gap-4 pt-4">
                <div className="text-center p-3 bg-green-50 rounded-lg border border-green-200">
                  <Globe className="h-6 w-6 text-green-600 mx-auto mb-1" />
                  <p className="text-sm font-medium text-green-800">
                    {isHindi ? '6+ ‡§°‡•á‡§ü‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§' : '6+ Data Sources'}
                  </p>
                </div>
                <div className="text-center p-3 bg-blue-50 rounded-lg border border-blue-200">
                  <Shield className="h-6 w-6 text-blue-600 mx-auto mb-1" />
                  <p className="text-sm font-medium text-blue-800">
                    {isHindi ? '‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡•Ä AI' : 'Transparent AI'}
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* User Guide Tab */}
        <TabsContent value="guide" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <BookOpen className="h-5 w-5 text-primary" />
                {userGuide.title}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <ul className="space-y-3">
                {userGuide.items.map((item, index) => (
                  <li key={index} className="text-sm">
                    {item}
                  </li>
                ))}
              </ul>

              <Separator />

              <div className="space-y-3">
                <h4 className="font-medium flex items-center gap-2">
                  <Eye className="h-4 w-4" />
                  {isHindi ? '‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø‡§§‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞ ‡§∏‡§Æ‡§ù‡•á‡§Ç' : 'Understanding Confidence Scores'}
                </h4>
                <div className="grid grid-cols-3 gap-2 text-xs">
                  <div className="text-center p-2 bg-green-50 rounded border border-green-200">
                    <div className="font-medium text-green-800">{isHindi ? '‡§â‡§ö‡•ç‡§ö' : 'High'}</div>
                    <div className="text-green-600">85-95%</div>
                  </div>
                  <div className="text-center p-2 bg-yellow-50 rounded border border-yellow-200">
                    <div className="font-medium text-yellow-800">{isHindi ? '‡§Æ‡§ß‡•ç‡§Ø‡§Æ' : 'Medium'}</div>
                    <div className="text-yellow-600">60-84%</div>
                  </div>
                  <div className="text-center p-2 bg-red-50 rounded border border-red-200">
                    <div className="font-medium text-red-800">{isHindi ? '‡§®‡§ø‡§Æ‡•ç‡§®' : 'Low'}</div>
                    <div className="text-red-600">30-59%</div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Live Demo Tab */}
        <TabsContent value="demo" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Play className="h-5 w-5 text-primary" />
                {isHindi ? '‡§≤‡§æ‡§á‡§µ ‡§°‡•á‡§Æ‡•ã ‡§â‡§¶‡§æ‡§π‡§∞‡§£' : 'Live Demo Examples'}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-sm text-muted-foreground">
                {isHindi ? 
                  '‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è ‡§â‡§¶‡§æ‡§π‡§∞‡§£‡•ã‡§Ç ‡§ï‡•ã ‡§ö‡§≤‡§æ‡§ï‡§∞ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡•Ä ‡§ï‡•ç‡§∑‡§ÆÔøΩÔøΩÔøΩ‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§¶‡•á‡§ñ‡•á‡§Ç:' :
                  'Run the examples below to see the system capabilities in action:'
                }
              </p>

              <div className="space-y-3">
                {exampleQueries.map((example, index) => (
                  <Card key={example.id} className="p-3">
                    <div className="flex items-start justify-between gap-3">
                      <div className="flex-1 space-y-2">
                        <div className="flex items-center gap-2">
                          <span className="text-lg">{example.icon}</span>
                          <Badge variant="outline" className="text-xs">
                            {example.category}
                          </Badge>
                          <Badge className={`text-xs ${getDifficultyColor(example.difficulty)}`}>
                            {example.difficulty}
                          </Badge>
                        </div>
                        
                        <div className="bg-muted/50 p-3 rounded text-sm">
                          "{example.query}"
                        </div>
                      </div>
                      
                      <Button
                        size="sm"
                        onClick={() => runExample(example)}
                        disabled={isLoading || selectedExample === example.id}
                        className="flex-shrink-0"
                      >
                        {selectedExample === example.id ? (
                          <div className="flex items-center gap-1">
                            <div className="w-3 h-3 border border-white border-t-transparent rounded-full animate-spin" />
                            <span className="ml-1">{isHindi ? '‡§ö‡§≤ ‡§∞‡§π‡§æ' : 'Running'}</span>
                          </div>
                        ) : (
                          <>
                            <Play className="h-3 w-3 mr-1" />
                            {isHindi ? '‡§ö‡§≤‡§æ‡§è‡§Ç' : 'Run'}
                          </>
                        )}
                      </Button>
                    </div>
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Demo Notes Tab */}
        <TabsContent value="notes" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Lightbulb className="h-5 w-5 text-primary" />
                {isHindi ? '‡§°‡•á‡§Æ‡•ã ‡§®‡•ã‡§ü‡•ç‡§∏' : 'Demo Notes'}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h4 className="font-medium text-blue-900 mb-2 flex items-center gap-2">
                  <Wifi className="h-4 w-4" />
                  {isHindi ? '‡§∏‡§ø‡§Æ‡•ç‡§Ø‡•Å‡§≤‡•á‡§ü‡•á‡§° ‡§°‡•á‡§ü‡§æ' : 'Simulated Data'}
                </h4>
                <p className="text-sm text-blue-800">
                  {isHindi ? 
                    '‡§Ø‡§π ‡§°‡•á‡§Æ‡•ã ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§≠‡§æÔøΩÔøΩ‡§§‡•Ä‡§Ø ‡§ï‡•É‡§∑‡§ø ‡§™‡§∞‡§ø‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§∏‡§ø‡§Æ‡•ç‡§Ø‡•Å‡§≤‡•á‡§ü‡•á‡§° ‡§°‡•á‡§ü‡§æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® ‡§Æ‡•á‡§Ç, ‡§Ø‡§π ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä APIs ‡§î‡§∞ ‡§°‡•á‡§ü‡§æ‡§∏‡•á‡§ü ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§ó‡§æ‡•§' :
                    'This demo uses simulated data that represents realistic Indian agricultural scenarios. In production, this would connect to actual government APIs and datasets.'
                  }
                </p>
              </div>

              <div className="space-y-3">
                <h4 className="font-medium">{isHindi ? '‡§°‡•á‡§ü‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§' : 'Data Sources'}</h4>
                <div className="grid grid-cols-2 gap-2 text-xs">
                  <div className="p-2 bg-gray-50 rounded">
                    <div className="font-medium">üå¶Ô∏è {isHindi ? '‡§Æ‡•å‡§∏‡§Æ' : 'Weather'}</div>
                    <div className="text-muted-foreground">IMD, OpenWeather</div>
                  </div>
                  <div className="p-2 bg-gray-50 rounded">
                    <div className="font-medium">üí∞ {isHindi ? '‡§¨‡§æ‡§ú‡§æ‡§∞' : 'Market'}</div>
                    <div className="text-muted-foreground">AGMARKNET</div>
                  </div>
                  <div className="p-2 bg-gray-50 rounded">
                    <div className="font-medium">üå± {isHindi ? '‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä' : 'Soil'}</div>
                    <div className="text-muted-foreground">Soil Health Card</div>
                  </div>
                  <div className="p-2 bg-gray-50 rounded">
                    <div className="font-medium">üìú {isHindi ? '‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç' : 'Schemes'}</div>
                    <div className="text-muted-foreground">PM-KISAN, Others</div>
                  </div>
                </div>
              </div>

              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <h4 className="font-medium text-green-900 mb-2 flex items-center gap-2">
                  <Star className="h-4 w-4" />
                  {isHindi ? '‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§∂‡§® ‡§∞‡•á‡§°‡•Ä' : 'Production Ready'}
                </h4>
                <p className="text-sm text-green-800">
                  {isHindi ? 
                    '‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§Ü‡§∞‡•ç‡§ï‡§ø‡§ü‡•á‡§ï‡•ç‡§ö‡§∞ ‡§™‡•ç‡§∞‡•ã‡§°‡§ï‡•ç‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡•§ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï API ‡§è‡§Ç‡§°‡§™‡•â‡§á‡§Ç‡§ü‡•ç‡§∏, ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡•Ä‡§ï‡§∞‡§£ ‡§î‡§∞ ‡§°‡•á‡§ü‡§æ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§ú‡•ã‡§°‡§º‡§®‡§æ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à‡•§' :
                    'The system architecture is production-ready. Real API endpoints, authentication, and data validation need to be added.'
                  }
                </p>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};
